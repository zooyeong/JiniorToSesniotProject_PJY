<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
						
<mapper namespace="senior_mapper">
	<!-- 인증 정보 리스트, 페이징 처리 포함 -->
	<select id="select_senior_verification_list" parameterType="hashMap" resultType="SeniorDto">
		select * from(
			select *
			from  verification order by verification_num desc
        ) offset #{displayArticle} rows fetch first #{articleNum} rows only
	</select>
	
	<!-- 인증 정보 리스트 총 갯수 -->
	<select id="select_register_count" resultType="int">
		select count(*) from verification
	</select>
	
	<!-- 인증 정보 리스트 해당 아이디만--> 
	<select id="select_senior_verification_list_by_id" resultType="SeniorDto"
										parameterType="SeniorDto">
		select * from verification
				 where id = #{id}
	</select>
	
	<!--인증 여부 컬럼 Y로 변경 (승인)-->
	<update id= "update_verification_status_as_Y" parameterType="SeniorDto">
		UPDATE verification 
		SET verification_status= 'Y'
		WHERE id = #{id}
	</update>

	<!-- 인증 여부 컬럼 Reject로 변경 (승인 거절)-->
	<update id= "update_verification_status_as_Rejected" parameterType="SeniorDto">
		UPDATE verification 
		SET verification_status= 'Rejected'
		WHERE id = #{id}
	</update> 
	
	<select id="select_senior_detail" resultType="SeniorDetailDto">
		select * from user_info u
			inner join snr s on u.id = s.id
			where u.id in (select v.id from verification v where id=u.id and verification_status='Y' and u.user_code = 'SNR')
			order by u.name
	</select>
	
	<select id="select_senior_detail_by_id" resultType="SeniorDetailDto"
											parameterType="String">
		select u.id, u.name, u.birthday, u.phone_number, u.password, u.user_code,
				u.address, u.detail_address, u.extra_address,  u.gender, u.email, s.info, s.area
			from user_info u
			inner join snr s on u.id = s.id
			where u.id = #{value}
	</select>
	
	<update id="update_user_info" parameterType="SeniorDetailDto">
		update user_info set
			password = NVL(#{password}, password),
			phone_number = NVL(#{phoneNumber}, phone_number),
			post_code = NVL(#{postCode}, post_code),
			address = NVL(#{address}, address),
			detail_address = NVL(#{detailAddress}, detail_address),
			extra_address = NVL(#{extraAddress}, extra_address),
			email = NVL(#{email}, email)
		where id = #{id}
	</update>
	
	<update id="update_snr" parameterType="SeniorDetailDto">
		update snr set 
			info = NVL(#{info}, info),
			area = NVL(#{area}, area)
		where id = #{id}
	</update>
	
	
	<select id="select_senior_schedule_by_id" resultType="SeniorScheduleDto">
		select * from senior_enable_schedule
			where id = #{id}
	</select>
	
	
	<select id="select_img_by_id" resultType="ImageFileDTO"
								parameterType="String">
		select * from IMAGE_FILE
			where id = #{value}
	</select>
	
	<update id="update_schedule" parameterType="hashMap">
		update senior_enable_schedule set
			status = #{status},
			work_status = #{workStatus}
		where id = #{id} and schedule_code = #{scheduleCode}
	</update>
	
	<update id="update_schedule_work_status" parameterType="hashMap">
		update senior_enable_schedule set
			work_status = #{workStatus}
		where id = #{id} and schedule_code = #{scheduleCode}
	</update>

</mapper>